{"ast":null,"code":"export const validateEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\nexport const validatePhoneNumber = phone => {\n  return phone.length >= 10 && phone.length <= 15;\n};\nexport const validateCompanyForm = formData => {\n  const errors = {};\n  if (!formData.companyName.trim()) {\n    errors.companyName = 'Company name is required';\n  } else if (formData.companyName.length > 50) {\n    errors.companyName = 'Company name must be 50 characters or less';\n  }\n  if (!formData.email.trim()) {\n    errors.email = 'Email is required';\n  } else if (!validateEmail(formData.email)) {\n    errors.email = 'Please enter a valid email';\n  } else if (formData.email.length > 100) {\n    errors.email = 'Email must be 100 characters or less';\n  }\n  if (!formData.phoneNumber.trim()) {\n    errors.phoneNumber = 'Phone number is required';\n  } else if (!validatePhoneNumber(formData.phoneNumber)) {\n    errors.phoneNumber = 'Phone number must be between 10-15 characters';\n  }\n  return errors;\n};","map":{"version":3,"names":["validateEmail","email","emailRegex","test","validatePhoneNumber","phone","length","validateCompanyForm","formData","errors","companyName","trim","phoneNumber"],"sources":["D:/cms/frontend/src/utils/validation.js"],"sourcesContent":["export const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n};\r\n\r\nexport const validatePhoneNumber = (phone) => {\r\n    return phone.length >= 10 && phone.length <= 15;\r\n};\r\n\r\nexport const validateCompanyForm = (formData) => {\r\n    const errors = {};\r\n\r\n    if (!formData.companyName.trim()) {\r\n        errors.companyName = 'Company name is required';\r\n    } else if (formData.companyName.length > 50) {\r\n        errors.companyName = 'Company name must be 50 characters or less';\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n        errors.email = 'Email is required';\r\n    } else if (!validateEmail(formData.email)) {\r\n        errors.email = 'Please enter a valid email';\r\n    } else if (formData.email.length > 100) {\r\n        errors.email = 'Email must be 100 characters or less';\r\n    }\r\n\r\n    if (!formData.phoneNumber.trim()) {\r\n        errors.phoneNumber = 'Phone number is required';\r\n    } else if (!validatePhoneNumber(formData.phoneNumber)) {\r\n        errors.phoneNumber = 'Phone number must be between 10-15 characters';\r\n    }\r\n\r\n    return errors;\r\n};"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,KAAK,IAAK;EACpC,MAAMC,UAAU,GAAG,4BAA4B;EAC/C,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;AACjC,CAAC;AAED,OAAO,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EAC1C,OAAOA,KAAK,CAACC,MAAM,IAAI,EAAE,IAAID,KAAK,CAACC,MAAM,IAAI,EAAE;AACnD,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAIC,QAAQ,IAAK;EAC7C,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAI,CAACD,QAAQ,CAACE,WAAW,CAACC,IAAI,CAAC,CAAC,EAAE;IAC9BF,MAAM,CAACC,WAAW,GAAG,0BAA0B;EACnD,CAAC,MAAM,IAAIF,QAAQ,CAACE,WAAW,CAACJ,MAAM,GAAG,EAAE,EAAE;IACzCG,MAAM,CAACC,WAAW,GAAG,4CAA4C;EACrE;EAEA,IAAI,CAACF,QAAQ,CAACP,KAAK,CAACU,IAAI,CAAC,CAAC,EAAE;IACxBF,MAAM,CAACR,KAAK,GAAG,mBAAmB;EACtC,CAAC,MAAM,IAAI,CAACD,aAAa,CAACQ,QAAQ,CAACP,KAAK,CAAC,EAAE;IACvCQ,MAAM,CAACR,KAAK,GAAG,4BAA4B;EAC/C,CAAC,MAAM,IAAIO,QAAQ,CAACP,KAAK,CAACK,MAAM,GAAG,GAAG,EAAE;IACpCG,MAAM,CAACR,KAAK,GAAG,sCAAsC;EACzD;EAEA,IAAI,CAACO,QAAQ,CAACI,WAAW,CAACD,IAAI,CAAC,CAAC,EAAE;IAC9BF,MAAM,CAACG,WAAW,GAAG,0BAA0B;EACnD,CAAC,MAAM,IAAI,CAACR,mBAAmB,CAACI,QAAQ,CAACI,WAAW,CAAC,EAAE;IACnDH,MAAM,CAACG,WAAW,GAAG,+CAA+C;EACxE;EAEA,OAAOH,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}